name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    strategy:
      matrix:
        go_version: [1.15.x]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go_version }}
      - name: Test Pre-Publish
        run: make test
      - name: Set env for LDFLAGS
        run: |
          VERSION=$(./ci/version)
          REVISION=$(git rev-parse --short=8 HEAD || echo unknown)
          BRANCH=$(git show-ref | grep "$(REVISION)" | grep -v HEAD | awk '{print $$2}' | sed 's|refs/remotes/origin/||' | sed 's|refs/heads/||' | sort | head -n 1)
          BUILT=$(date -u +%Y-%m-%dT%H:%M:%S%z)
          echo ${VERSION} >> $GITHUB_ENV
          echo ${REVISION} >> $GITHUB_ENV
          echo ${BRANCH} >> $GITHUB_ENV
          echo ${BUILT} >> $GITHUB_ENV
      - name: Build with xgo
        uses: crazy-max/ghaction-xgo@v1
        with:
          xgo_version: latest
          go_version: ${{ matrix.go_version }}
          dest: build
          prefix: theo-agent
          targets: linux/*,darwin/amd64
          v: true
          x: false
          ldflags: -X ${{ COMMON_PACKAGE_NAMESPACE }}.NAME=${{ PACKAGE_NAME }} -X ${{ COMMON_PACKAGE_NAMESPACE }}.VERSION=${{ VERSION }} 
              -X ${{ COMMON_PACKAGE_NAMESPACE }}.REVISION=${{ REVISION }} -X ${{ COMMON_PACKAGE_NAMESPACE }}.BUILT=${{ BUILT }} 
              -X ${{ COMMON_PACKAGE_NAMESPACE }}.BRANCH=${{ BRANCH }}
              -s -w
        env:
          COMMON_PACKAGE_NAMESPACE: github.com/theoapp/theo-agent/common
      - name: Create Release
        uses: actions/create-release@v1.0.0
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Assets
        uses: glentiki/xbin-release-action@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          assets_path: ./build